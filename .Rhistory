delta<-2*(beta1+c(-1,1)*qt(0.975,df=fit$df)*sumCoef[2,2])
delta
---
---
title: "JHU_RM_Q3"
author: "mbh"
date: "Tuesday, June 16, 2015"
output: html_document
---
##Load and inspect data
```{r load data}
str(mtcars)
```
## Question One
Consider the mtcars data set. Fit a model with mpg as the outcome that includes number of cylinders as a factor
variable and weight as confounder.
Give the adjusted estimate for the expected change in mpg comparing 8 cylinders to 4.
-4.256
-3.206
-6.071
33.991
```{r q1}
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
summary(fit)
fitnf<-lm(mpg~cyl+wt,data=mtcars)
summary(fitnf)
```
## Question Three
Consider the mtcars data set. Fit a model with mpg as the outcome that considers number of cylinders as a factor variable and weight as confounder. Now fit a second model with mpg as the outcome model that considers the interaction between number of cylinders (as a factor variable) and weight. Give the P-value for the likelihood ratio test comparing the two models and suggest a model using 0.05 as a type I error rate significance benchmark.InsectSprays
The P-value is small (less than 0.05). So, according to our criterion, we reject, which suggests that the interaction term is not necessary.
The P-value is larger than 0.05. So, according to our criterion, we would fail to reject, which suggests that the interaction terms is necessary.
The P-value is small (less than 0.05). Thus it is surely true that there is no interaction term in the true model.
The P-value is small (less than 0.05). So, according to our criterion, we reject, which suggests that the interaction term is necessary
The P-value is small (less than 0.05). Thus it is surely true that there is an interaction term in the true model.
The P-value is larger than 0.05. So, according to our criterion, we would fail to reject, which suggests that the interaction terms may not be necessary.
```{r q3}
fitcf<-lm(mpg~factor(cyl)+wt,data=mtcars)
fitint<-lm(mpg~factor(cyl)*wt,data=mtcars)
summary(fitcf)
summary(fitint)
```
##Question Four
```{r q4}
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4
fit4nf<-lm(mpg ~ I(wt * 1) + factor(cyl), data = mtcars)
fit4nf
```
## Question Five
Question 5
Consider the following data set
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
Give the hat diagonal for the most influential point
0.2025
0.9946
0.2804
0.2287
```{r q5}
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
df<-data.frame(x,y)
fit5<-lm(y~x,data=df)
summary(fit5)
hatvalues(fit5)
```
## Question Six
```{r q6}
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
df<-data.frame(x,y)
fit6<-lm(y~x,data=df)
dfbeta(fit6)
```
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
summary(fit)
fitnf<-lm(mpg~cyl+wt,data=mtcars)
summary(fitnf)
fitcf<-lm(mpg~factor(cyl)+wt,data=mtcars)
fitint<-lm(mpg~factor(cyl)*wt,data=mtcars)
summary(fitcf)
summary(fitint)
fit4<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4
fit4nf<-lm(mpg ~ I(wt * 1) + factor(cyl), data = mtcars)
fit4nf
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
df<-data.frame(x,y)
fit5<-lm(y~x,data=df)
summary(fit5)
hatvalues(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
df<-data.frame(x,y)
fit6<-lm(y~x,data=df)
dfbeta(fit6)
library(dplyr)
data(mtcars)
str(mtcars)
#make an am factor column
am<-as.factor(mtcars$am)
mtwide<-mutate(mtcars,amf)
library(dplyr)
data(mtcars)
str(mtcars)
#make an am factor column
am<-as.factor(mtcars$am)
#mtwide<-mutate(mtcars,amf)
str(mtcars)
library(dplyr)
data(mtcars)
str(mtcars)
#make an am factor column
mtcars$am<-as.factor(mtcars$am)
#mtwide<-mutate(mtcars,amf)
str(mtcars)
library(dplyr)
data(mtcars)
str(mtcars)
#make  am a factor column
mtcars$am<-as.factor(mtcars$am)
library(ggplot2)
mtcars$gpm<-100/mtcars$mpg
g<-ggplot(data=mtwide,aes(x=wt,y=gpm,colour=am))+
geom_point()+
geom_smooth(method=lm)+
#facet_wrap(~amf,shrink=FALSE)+
labs(x = "Weight / 1000 lb",y = "Gallons per 100 miles")
g
library(ggplot2)
mtcars$gpm<-100/mtcars$mpg
g<-ggplot(data=mtcars,aes(x=wt,y=gpm,colour=am))+
geom_point()+
geom_smooth(method=lm)+
#facet_wrap(~amf,shrink=FALSE)+
labs(x = "Weight / 1000 lb",y = "Gallons per 100 miles")
g
lm1<-lm(gpm~factor(am),data=mtcars)
lm1
lm(gpm~factor(am)*wt,data=mtcars)
summary(lm(gpm~factor(am)*wt,data=mtcars))
summary(lm(gpm~factor(am)*wt-1,data=mtcars))
summary(lm(gpm~factor(am)+wt-1,data=mtcars))
summary(lm(gpm~factor(am)+wt,data=mtcars))
g2<-ggplot(data=mtcars,aes(x=wt,y=gpm))+
geom_point()+
geom_smooth(method=lm)+
#facet_wrap(~amf,shrink=FALSE)+
labs(x = "Weight / 1000 lb",y = "Gallons per 100 miles")
g2
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-beta0+beta1*x1+beta2*x2))
logit<-ln(P/(1-P))
logit
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-beta0+beta1*x1+beta2*x2))
logit<-log(P/(1-P))
logit
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-beta0+beta1*x1+beta2*x2))
logit<-log(P/(1-P))
logit
odds<-exp(logit)
odds
P
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-beta0+beta1*x1+beta2*x2)) # =P(y=1)
logit<-log(P/(1-P))
logit
odds<-exp(logit)
odds
P # =P(y=1)
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-(beta0+beta1*x1+beta2*x2))_ # =P(y=1)
logit<-log(P/(1-P))
logit
odds<-exp(logit)
odds
P # =P(y=1)
beta0=-1.5
beta1=3
beta2=-0.5
x1=1
x2=5
P<-1/(1+exp(-(beta0+beta1*x1+beta2*x2))) # =P(y=1)
logit<-log(P/(1-P))
logit
odds<-exp(logit)
odds
P # =P(y=1)
tb<-data.frame("Allocation"=c("Pay costs","Devolved to depts. for CPD","Central Funding"),c(27,33,39))
library(ggplot2)
tb<-data.frame("Category"=c("Pay costs","Devolved to depts. for CPD","Central Funding"),"Allocation"=c(27,33,39))
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())+
theme(legend.text=element_text(size=12),
legend.title = element_blank())+
theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,colour=Allocation, order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())+
theme(legend.text=element_text(size=12),
legend.title = element_blank())+
theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())+
theme(legend.text=element_text(size=12),
legend.title = element_blank())+
theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())+
# theme(legend.text=element_text(size=12),
legend.title = element_blank())+
#theme(legend.position=c(.8, .2)
)
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2)
)
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=14),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=18),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=18),
axis.text.y=element_text(size=18))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=14,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=18),
axis.text.y=element_text(size=18))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=18,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=18),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=18,vjust=-.5),
axis.title.y=element_blank())
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
#theme(legend.position=c(.8, .2))
d
d<-ggplot(data=tb,
aes(x=Category, y=Allocation,fill=Allocation, order=-Allocation))+
geom_bar(stat="identity")+
#facet_wrap(~variable)+
coord_flip()+
scale_y_continuous(breaks = seq(0, 50, 10))+
theme(axis.text.x = element_text(size=18),
axis.text.y=element_text(size=14))+
labs(y = "% Allocation of total training budget")+
theme(axis.title.x = element_text(size=18,vjust=-.5),
axis.title.y=element_blank())+
# theme(legend.text=element_text(size=12),
# legend.title = element_blank())+
theme(legend.position="none")
d
setwd("C:/Users/Mike/Rspace/JHU_RM")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda",method="curl")
load("./data/gaData.rda")
gaData$julian <- julian(gaData$date)
head(gaData)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda")
load("./data/gaData.rda")
gaData$julian <- julian(gaData$date)
head(gaData)
data(InsectSprays)
data(InsectSprays)
str(InsectSprays)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",data=InsectSprays)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",offset=log(sprayB+1)data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",offset=log(sprayB+1)data=InsectSprays)
summary(model1)
?InsectSprays
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",offset=log(sprayB+1)+log(10),data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",offset=log(sprayB+1)data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
model1<-glm(count ~ spray,family="poisson",offset=log(10),data=InsectSprays)
summary(model1)
InsectSprays$t<-2
str(InsectSprays)
data(InsectSprays)
str(InsectSprays)
InsectSprays$t<-2
model1<-glm(count ~ spray,family="poisson",offset=log(t+1),data=InsectSprays)
summary(model1)
data(InsectSprays)
str(InsectSprays)
InsectSprays$t<-2
model1<-glm(count ~ spray,family="poisson",offset=log(t+1),data=InsectSprays)
summary(model1)
model2<-glm(count ~ spray,family="poisson",offset=log(t+1)+log(10),data=InsectSprays)
summary(model2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 4 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
splineTerms
head(splineTerms)
plot(x,SplineTerms)
plot(x,splineTerms)
length(x)
length(SplineTerms)
length(splineTerms)
splineterms(1:20)
splineTerms(1:20)
splineTerms[1:20]
x[1]
str(splineTerms)
head(splineTerms)
knots
splineTerms[1:100,1:2]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
knot0=0
splineTerms <- sapply(knot0, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
knot0=0
splineTerms <- sapply(knot0, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
(yhat[11]-yhat[6])/(x[11]-x[6])
